// Mocks generated by Mockito 5.0.17 from annotations
// in bima/test/features/auth/data/repositories/auth_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:bima/features/auth/data/data_sources/auth_data_source.dart'
    as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [AuthDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthDataSource extends _i1.Mock implements _i2.AuthDataSource {
  @override
  _i3.Future<void> signInWithPhoneNumber(
          {String? phoneNumber,
          Function? onCodeAutoRetrievalTimeout,
          Function? onCodeSent,
          Function? onVerificationFailed,
          Function? onVerificationCompleted}) =>
      (super.noSuchMethod(
          Invocation.method(#signInWithPhoneNumber, [], {
            #phoneNumber: phoneNumber,
            #onCodeAutoRetrievalTimeout: onCodeAutoRetrievalTimeout,
            #onCodeSent: onCodeSent,
            #onVerificationFailed: onVerificationFailed,
            #onVerificationCompleted: onVerificationCompleted
          }),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<_i4.User?> verifySmsCode(
          {String? smsCode, String? verificationId}) =>
      (super.noSuchMethod(
          Invocation.method(#verifySmsCode, [],
              {#smsCode: smsCode, #verificationId: verificationId}),
          returnValue: Future<_i4.User?>.value()) as _i3.Future<_i4.User?>);
  @override
  _i3.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<String?> getCurrentUser() =>
      (super.noSuchMethod(Invocation.method(#getCurrentUser, []),
          returnValue: Future<String?>.value()) as _i3.Future<String?>);
}
