// Mocks generated by Mockito 5.0.17 from annotations
// in bima/test/features/auth/presentation/bloc/auth_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:bima/features/auth/domain/entities/auth.dart' as _i6;
import 'package:bima/features/auth/domain/repositories/auth_repository.dart'
    as _i2;
import 'package:bima/features/auth/domain/use_cases/get_current_user.dart'
    as _i7;
import 'package:bima/features/auth/domain/use_cases/sign_in_with_phone_number.dart'
    as _i3;
import 'package:bima/features/auth/domain/use_cases/sign_out.dart' as _i8;
import 'package:bima/features/auth/domain/use_cases/verify_sms_code.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthRepository_0 extends _i1.Fake implements _i2.AuthRepository {}

/// A class which mocks [SignInWithPhoneNumber].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignInWithPhoneNumber extends _i1.Mock
    implements _i3.SignInWithPhoneNumber {
  @override
  _i2.AuthRepository get authRepository =>
      (super.noSuchMethod(Invocation.getter(#authRepository),
          returnValue: _FakeAuthRepository_0()) as _i2.AuthRepository);
  @override
  _i4.Future<void>? call(_i3.VerifyPhoneNumberParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValueForMissingStub: Future<void>.value())
          as _i4.Future<void>?);
}

/// A class which mocks [VerifySmsCode].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerifySmsCode extends _i1.Mock implements _i5.VerifySmsCode {
  @override
  _i2.AuthRepository get authRepository =>
      (super.noSuchMethod(Invocation.getter(#authRepository),
          returnValue: _FakeAuthRepository_0()) as _i2.AuthRepository);
  @override
  _i4.Future<_i6.AuthenticationEntity?> call(
          _i5.OtpVerificationParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<_i6.AuthenticationEntity?>.value())
          as _i4.Future<_i6.AuthenticationEntity?>);
}

/// A class which mocks [GetCurrentUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentUser extends _i1.Mock implements _i7.GetCurrentUser {
  @override
  _i2.AuthRepository get authRepository =>
      (super.noSuchMethod(Invocation.getter(#authRepository),
          returnValue: _FakeAuthRepository_0()) as _i2.AuthRepository);
}

/// A class which mocks [SignOutUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignOutUseCase extends _i1.Mock implements _i8.SignOutUseCase {
  @override
  _i2.AuthRepository get authRepository =>
      (super.noSuchMethod(Invocation.getter(#authRepository),
          returnValue: _FakeAuthRepository_0()) as _i2.AuthRepository);
  @override
  _i4.Future<void>? call() => (super.noSuchMethod(Invocation.method(#call, []),
      returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>?);
}
